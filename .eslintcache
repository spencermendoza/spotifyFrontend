[{"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\index.js":"1","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\App.js":"2","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\index.js":"3","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Context\\LibraryContext.js":"4","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\Create\\Create.jsx":"5","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\GenreList\\GenreList.jsx":"6","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\CreateSelections\\CreateSelections.jsx":"7","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\ArtistList\\ArtistList.jsx":"8","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\PlaylistMaker\\PlaylistMaker.jsx":"9","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\HomePage\\HomePage.jsx":"10","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\Navbar\\Navbar.jsx":"11","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\UserInfo\\UserInfo.jsx":"12","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\GetLogin\\GetLogin.jsx":"13","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\CreateContext\\CreateContext.js":"14","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\Checkbox\\Checkbox.jsx":"15","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\Library\\Library.jsx":"16","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\ArtistItem\\ArtistItem.jsx":"17","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\LibraryList\\LibraryList.jsx":"18","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\TrackList\\TrackList.jsx":"19","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\CreateButtons\\CreateButtons.jsx":"20"},{"size":151,"mtime":1610225509236,"results":"21","hashOfConfig":"22"},{"size":2243,"mtime":1614886887451,"results":"23","hashOfConfig":"22"},{"size":1489,"mtime":1615323177480,"results":"24","hashOfConfig":"22"},{"size":3223,"mtime":1615325324816,"results":"25","hashOfConfig":"22"},{"size":1788,"mtime":1614970406171,"results":"26","hashOfConfig":"22"},{"size":433,"mtime":1614970372117,"results":"27","hashOfConfig":"22"},{"size":3173,"mtime":1615324504021,"results":"28","hashOfConfig":"22"},{"size":500,"mtime":1614970359326,"results":"29","hashOfConfig":"22"},{"size":4537,"mtime":1615325324816,"results":"30","hashOfConfig":"22"},{"size":1514,"mtime":1614887098658,"results":"31","hashOfConfig":"22"},{"size":1425,"mtime":1614884239935,"results":"32","hashOfConfig":"22"},{"size":752,"mtime":1614884284937,"results":"33","hashOfConfig":"22"},{"size":1298,"mtime":1614884278222,"results":"34","hashOfConfig":"22"},{"size":4181,"mtime":1615325241044,"results":"35","hashOfConfig":"22"},{"size":677,"mtime":1614970283594,"results":"36","hashOfConfig":"22"},{"size":848,"mtime":1615316084214,"results":"37","hashOfConfig":"22"},{"size":1025,"mtime":1615315241329,"results":"38","hashOfConfig":"22"},{"size":1044,"mtime":1615316082970,"results":"39","hashOfConfig":"22"},{"size":196,"mtime":1615323061457,"results":"40","hashOfConfig":"22"},{"size":1821,"mtime":1615325201900,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"17r2awj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\index.js",[],["91","92"],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\App.js",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\index.js",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Context\\LibraryContext.js",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\Create\\Create.jsx",["93","94"],"import React, { useContext, useState } from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\nimport { CreateContext } from '../CreateContext/CreateContext';\r\nimport { CreateSelections, GenreList, PlaylistMaker, ArtistList} from '../..';\r\n\r\n\r\nconst Create = () => {\r\n\r\n    let { createOption, } = useContext(CreateContext);\r\n\r\n    //determines which createOption is selected and renders\r\n    //appropriate component based on selection\r\n    const displayCreateMenu = () => {\r\n        if (createOption === 'genre') {\r\n            return (\r\n                <div className='create'>\r\n                    <GenreList />\r\n                    <PlaylistMaker />\r\n                </div>\r\n            );\r\n        } else if (createOption === 'artist') {\r\n            return (\r\n                <div className='create'>\r\n                    <ArtistList />\r\n                    <PlaylistMaker />\r\n                </div>\r\n            );\r\n        } else if (createOption === 'create') {\r\n            return (\r\n                <div className='create'>\r\n                    <PlaylistMaker />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className='createPage'>\r\n                    <p>Use this page to create playlists based on all the genres present in your library or by one or multiple artists present in your library.</p>\r\n                    <p>Make a selection to continue.</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='createPage'>\r\n            <div className='createHead'>\r\n                <h1>Create a playlist</h1>\r\n                <CreateSelections />\r\n            </div>\r\n            {displayCreateMenu()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\GenreList\\GenreList.jsx",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\CreateSelections\\CreateSelections.jsx",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\ArtistList\\ArtistList.jsx",["95"],"import React, { useContext } from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\nimport { CreateContext } from '../CreateContext/CreateContext';\r\nimport { Checkbox } from '../..';\r\n\r\nconst ArtistList = () => {\r\n    \r\n    let { list } = useContext(CreateContext);\r\n\r\n    return (\r\n        <ul className='list'>\r\n            {list.map((artist, i) => (\r\n                <Checkbox item={artist} key={i} />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ArtistList;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\PlaylistMaker\\PlaylistMaker.jsx",["96","97","98","99","100","101","102"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\nimport { CreateContext } from '../CreateContext/CreateContext';\r\nimport { CreateButtons } from '../..';\r\n\r\n\r\nconst PlaylistMaker = () => {\r\n\r\n    let { \r\n        createPlaylist, \r\n        findArtistsByGenre \r\n    } = useContext(LibraryContext);\r\n\r\n    let {\r\n        selectedList, \r\n        setSelectedList, \r\n        setArtistList,\r\n        setCreateOption, \r\n        changeOption, \r\n        createOption, \r\n        clearSelection, \r\n        artistList\r\n    } = useContext(CreateContext);\r\n\r\n    const playlistNameRef = useRef(null);\r\n\r\n    const beginCreateStage = () => {\r\n        console.log('this will be a multi part function')\r\n        let newArtistList = selectedList;\r\n        if (createOption === 'genre') {\r\n            console.log('creating by genre')\r\n            newArtistList = findArtistsByGenre(selectedList);\r\n        }\r\n        setArtistList(newArtistList);\r\n        setCreateOption('create');\r\n    }\r\n\r\n    //This is what is returned if 'createSelection' is set to 'genre'\r\n    const createByGenre = () => {\r\n        return (\r\n            <div className='playlistMaker'>\r\n                <p>Here are your selected genres so far:</p>\r\n                <ul className='playlistMakerList'>\r\n                    {selectedList.sort().map((genre, key) => (\r\n                        <li key={key} onClick={e => {changeOption(genre)}}>{genre}</li>\r\n                    ))}\r\n                </ul>\r\n                <CreateButtons />\r\n                {/* <div className='createButtons'>\r\n                    <button onClick={() => beginCreateStage()}>Show Artists</button>\r\n                    <button onClick={() => clearSelection()}>Clear selection</button>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //This is what is returned if 'createSelection' is set to 'artist'\r\n    const createByArtist = () => {\r\n        return (\r\n            <div className='playlistMaker'>\r\n                <p>Here are your selected artists so far:</p>\r\n                <ul className='playlistMakerList'>\r\n                    {selectedList.sort((a, b) => (a.name > b.name) ? 1 : -1).map((artist, key) => (\r\n                        <li key={key} onClick={e => {changeOption(artist)}}>{artist.name}</li>\r\n                    ))}\r\n                </ul>\r\n                <CreateButtons />\r\n                {/* <div className='createButtons'>\r\n                    <button onClick={() => beginCreateStage()}>Show Artists</button>\r\n                    <button onClick={() => setSelectedList(associateArtists(selectedList))}>Associate Artists</button>\r\n                    <button onClick={() => clearSelection()}>Clear selection</button>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //This is what is returned if 'createSelection' is set to 'create'\r\n    const create = () => {\r\n        return (\r\n            <div className='playlistMaker'>\r\n                <p>Here is a list of artists matching your selection:</p>\r\n                <ul className='playlistMakerList'>\r\n                    {artistList.map((artist, key) => (\r\n                        <li key={key} onClick={e => {changeOption(artist)}}>{artist.name}</li>\r\n                    ))}\r\n                </ul>\r\n                <form className='name-playlist'>\r\n                    <label>Name your playlist:</label>\r\n                    <input type='text' name='Name your playlist' ref={playlistNameRef}></input>\r\n                </form>\r\n                <b>Clicking 'Create' below will create a playlist with these artists</b><br></br>\r\n                <CreateButtons />\r\n                {/* <div className='createButtons'>\r\n                    <button onClick={() => createPlaylist(artistList, playlistNameRef.current.value)}>Create</button>\r\n                    <button onClick={() => clearSelection()}>Clear selection</button>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //conditional rendering based on if user chose to create by genre\r\n    //or create by artist, or begin the create stage\r\n    const genreOrArtist = () => {\r\n        if (createOption === 'artist') {\r\n            return createByArtist();\r\n        } else if (createOption === 'genre') {\r\n            return createByGenre();\r\n        } else if (createOption === 'create') {\r\n            return create();\r\n        }\r\n    }\r\n\r\n    return (\r\n        genreOrArtist()\r\n    );\r\n}\r\n\r\nexport default PlaylistMaker;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\HomePage\\HomePage.jsx",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\Navbar\\Navbar.jsx",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\UserInfo\\UserInfo.jsx",["103","104"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\n\r\nconst UserInfo = () => {\r\n\r\n    const { user } = useContext(LibraryContext);\r\n\r\n    const showInfo = (user) => {\r\n        return (\r\n            <ul className='infoList'>\r\n            <li><b>Username:</b> {user.display_name}</li>\r\n                <li><b>Country:</b> {user.country}</li>\r\n                <li><b>Email:</b> {user.email}</li>\r\n                <li><b>Subscription Type:</b> {user.product}</li>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='userInfo'>\r\n            <h1>{user.display_name}:</h1>\r\n            {showInfo(user)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\GetLogin\\GetLogin.jsx",["105"],"import React, { useState, useEffect, useRef, useContext} from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\n\r\nconst GetLogin = ({changeLogin, spotifyURL}) => {\r\n\r\n    const [url, setUrl] = useState({});\r\n    let { startup } = useContext(LibraryContext);\r\n\r\n    useEffect(() => {\r\n        setUrl(spotifyURL)\r\n    }, [spotifyURL]);\r\n\r\n    let newWindow;\r\n\r\n    const openSpotify = () => {\r\n        var width = 450,\r\n            height = 730;\r\n        let features = 'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' + width + ', height=' + height\r\n        newWindow = window.open(url, 'Spotify', features);\r\n\r\n\r\n        let timer = setInterval(function() {\r\n            if (newWindow.closed) {\r\n                clearInterval(timer);\r\n                changeLogin();\r\n                startup();\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    const waitForURL = () => {\r\n        if (url === 'none') {\r\n            return (<p>We are generating your sign in link now</p>)\r\n        } else {\r\n            return (\r\n                <button className='signInButton' onClick={() => openSpotify()}>\r\n                    Log In\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        waitForURL()\r\n    )\r\n}\r\n\r\nexport default GetLogin;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\CreateContext\\CreateContext.js",["106","107"],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\Checkbox\\Checkbox.jsx",["108","109","110"],"import React, { useContext, useEffect, useState} from 'react';\r\nimport { CreateContext } from '../CreateContext/CreateContext';\r\n\r\nconst Checkbox = (props) => {\r\n\r\n    let { item } = props;\r\n\r\n    let { selectedList, changeOption, createOption } = useContext(CreateContext);\r\n    let checked = false;\r\n    let name = typeof item === 'object' ? item.name : item;\r\n\r\n    if (selectedList.includes(item)) {\r\n        checked = true;\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <label>\r\n                <input type='checkbox' checked={checked} value={name} onChange={e => changeOption(item)} />{name}\r\n            </label>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Checkbox;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\Library\\Library.jsx",["111","112"],"import React, {  useContext, useState } from 'react';\r\nimport '../../../App.css';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\nimport { LibraryList } from '../..';\r\n\r\nconst Library = () => {\r\n\r\n    const { artistLibrary } = useContext(LibraryContext);\r\n    const [display, setDisplay] = useState('list');\r\n\r\n\r\n    //Checks if there are items in library in state, if there is shows number of tracks in library\r\n    //and shows a button to view artists. If no artists in library in state, shows a <p>\r\n    //that says 'please hold while I get your tracks'\r\n    const waitingOnAPI = () => {\r\n        if (artistLibrary.length > 0) {\r\n            return <LibraryList />\r\n        } else {\r\n            return (<p>Please hold while I get your tracks!</p>);\r\n        }\r\n    };\r\n\r\n    return waitingOnAPI();\r\n}\r\n\r\nexport default Library;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\ArtistItem\\ArtistItem.jsx",["113","114","115"],"import React, { useState, useEffect } from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\nimport '../../../App.css';\r\nimport icon from '../../../img/Spotify_Icon_RGB_Black.png';\r\n\r\nconst ArtistItem = ({artist}) => {\r\n\r\n    let [numOfTracks, setNumOfTracks] = useState(0);\r\n    let { name, music, images } = artist;\r\n\r\n    useEffect(() => {\r\n        formatArtist();\r\n        console.log(images)\r\n    }, [artist]);\r\n\r\n    const formatArtist = () => {\r\n        music.forEach(album => {\r\n            setNumOfTracks(numOfTracks + album.tracks.length)\r\n        })\r\n        if (images.length === 0) {\r\n            images.push({url: icon});\r\n            console.log(artist)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <tr className='singleArtist'>\r\n            <td><img className='artistImage' src={images[0] ? images[0].url : icon} /></td>\r\n            <td><b>{name}</b></td>\r\n            <td>{music.length}</td>\r\n            <td>{numOfTracks}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ArtistItem;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\LibraryList\\LibraryList.jsx",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\TrackList\\TrackList.jsx",["116","117"],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\CreateButtons\\CreateButtons.jsx",["118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":29,"nodeType":"126","messageId":"127","endLine":1,"endColumn":37},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":24},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":1,"column":29,"nodeType":"126","messageId":"127","endLine":1,"endColumn":37},{"ruleId":"124","severity":1,"message":"129","line":1,"column":39,"nodeType":"126","messageId":"127","endLine":1,"endColumn":48},{"ruleId":"124","severity":1,"message":"130","line":10,"column":9,"nodeType":"126","messageId":"127","endLine":10,"endColumn":23},{"ruleId":"124","severity":1,"message":"131","line":11,"column":9,"nodeType":"126","messageId":"127","endLine":11,"endColumn":25},{"ruleId":"124","severity":1,"message":"132","line":17,"column":9,"nodeType":"126","messageId":"127","endLine":17,"endColumn":24},{"ruleId":"124","severity":1,"message":"133","line":22,"column":9,"nodeType":"126","messageId":"127","endLine":22,"endColumn":23},{"ruleId":"124","severity":1,"message":"134","line":28,"column":11,"nodeType":"126","messageId":"127","endLine":28,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"129","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"135","line":1,"column":38,"nodeType":"126","messageId":"127","endLine":1,"endColumn":44},{"ruleId":"124","severity":1,"message":"136","line":1,"column":28,"nodeType":"126","messageId":"127","endLine":1,"endColumn":38},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":24},{"ruleId":"124","severity":1,"message":"129","line":1,"column":29,"nodeType":"126","messageId":"127","endLine":1,"endColumn":38},{"ruleId":"124","severity":1,"message":"125","line":1,"column":40,"nodeType":"126","messageId":"127","endLine":1,"endColumn":48},{"ruleId":"124","severity":1,"message":"137","line":8,"column":39,"nodeType":"126","messageId":"127","endLine":8,"endColumn":51},{"ruleId":"124","severity":1,"message":"138","line":9,"column":12,"nodeType":"126","messageId":"127","endLine":9,"endColumn":19},{"ruleId":"124","severity":1,"message":"139","line":9,"column":21,"nodeType":"126","messageId":"127","endLine":9,"endColumn":31},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":14,"column":8,"nodeType":"142","endLine":14,"endColumn":16,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":29,"column":17,"nodeType":"146","endLine":29,"endColumn":87},{"ruleId":"124","severity":1,"message":"136","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":1,"column":29,"nodeType":"126","messageId":"127","endLine":1,"endColumn":37},{"ruleId":"124","severity":1,"message":"147","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":19},{"ruleId":"124","severity":1,"message":"148","line":7,"column":21,"nodeType":"126","messageId":"127","endLine":7,"endColumn":33},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'LibraryContext' is defined but never used.","'useEffect' is defined but never used.","'createPlaylist' is assigned a value but never used.","'associateArtists' is assigned a value but never used.","'setSelectedList' is assigned a value but never used.","'clearSelection' is assigned a value but never used.","'beginCreateStage' is assigned a value but never used.","'useRef' is defined but never used.","'useContext' is defined but never used.","'createOption' is assigned a value but never used.","'display' is assigned a value but never used.","'setDisplay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formatArtist' and 'images'. Either include them or remove the dependency array.","ArrayExpression",["151"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'keepTrack' is assigned a value but never used.","'setKeepTrack' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [artist, formatArtist, images]",{"range":"154","text":"155"},[429,437],"[artist, formatArtist, images]"]