[{"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\index.js":"1","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\App.js":"2","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\index.js":"3","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Context\\LibraryContext.js":"4","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\Create\\Create.jsx":"5","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\GenreList\\GenreList.jsx":"6","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\CreateSelections\\CreateSelections.jsx":"7","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\ArtistList\\ArtistList.jsx":"8","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\PlaylistMaker\\PlaylistMaker.jsx":"9","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\HomePage\\HomePage.jsx":"10","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\Navbar\\Navbar.jsx":"11","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\UserInfo\\UserInfo.jsx":"12","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\GetLogin\\GetLogin.jsx":"13","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\CreateContext\\CreateContext.js":"14","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\Checkbox\\Checkbox.jsx":"15","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\Library\\Library.jsx":"16","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\ArtistItem\\ArtistItem.jsx":"17","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\LibraryList\\LibraryList.jsx":"18"},{"size":151,"mtime":1610225509236,"results":"19","hashOfConfig":"20"},{"size":2243,"mtime":1614886887451,"results":"21","hashOfConfig":"20"},{"size":1316,"mtime":1615315983536,"results":"22","hashOfConfig":"20"},{"size":4907,"mtime":1614970660679,"results":"23","hashOfConfig":"20"},{"size":1788,"mtime":1614970406171,"results":"24","hashOfConfig":"20"},{"size":433,"mtime":1614970372117,"results":"25","hashOfConfig":"20"},{"size":3103,"mtime":1614970630219,"results":"26","hashOfConfig":"20"},{"size":500,"mtime":1614970359326,"results":"27","hashOfConfig":"20"},{"size":4396,"mtime":1614971384697,"results":"28","hashOfConfig":"20"},{"size":1514,"mtime":1614887098658,"results":"29","hashOfConfig":"20"},{"size":1425,"mtime":1614884239935,"results":"30","hashOfConfig":"20"},{"size":752,"mtime":1614884284937,"results":"31","hashOfConfig":"20"},{"size":1298,"mtime":1614884278222,"results":"32","hashOfConfig":"20"},{"size":2419,"mtime":1614970410833,"results":"33","hashOfConfig":"20"},{"size":677,"mtime":1614970283594,"results":"34","hashOfConfig":"20"},{"size":848,"mtime":1615316084214,"results":"35","hashOfConfig":"20"},{"size":1025,"mtime":1615315241329,"results":"36","hashOfConfig":"20"},{"size":1044,"mtime":1615316082970,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"17r2awj",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\index.js",[],["82","83"],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\App.js",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\index.js",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Context\\LibraryContext.js",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\Create\\Create.jsx",["84","85"],"import React, { useContext, useState } from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\nimport { CreateContext } from '../CreateContext/CreateContext';\r\nimport { CreateSelections, GenreList, PlaylistMaker, ArtistList} from '../..';\r\n\r\n\r\nconst Create = () => {\r\n\r\n    let { createOption, } = useContext(CreateContext);\r\n\r\n    //determines which createOption is selected and renders\r\n    //appropriate component based on selection\r\n    const displayCreateMenu = () => {\r\n        if (createOption === 'genre') {\r\n            return (\r\n                <div className='create'>\r\n                    <GenreList />\r\n                    <PlaylistMaker />\r\n                </div>\r\n            );\r\n        } else if (createOption === 'artist') {\r\n            return (\r\n                <div className='create'>\r\n                    <ArtistList />\r\n                    <PlaylistMaker />\r\n                </div>\r\n            );\r\n        } else if (createOption === 'create') {\r\n            return (\r\n                <div className='create'>\r\n                    <PlaylistMaker />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className='createPage'>\r\n                    <p>Use this page to create playlists based on all the genres present in your library or by one or multiple artists present in your library.</p>\r\n                    <p>Make a selection to continue.</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='createPage'>\r\n            <div className='createHead'>\r\n                <h1>Create a playlist</h1>\r\n                <CreateSelections />\r\n            </div>\r\n            {displayCreateMenu()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\GenreList\\GenreList.jsx",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\CreateSelections\\CreateSelections.jsx",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\ArtistList\\ArtistList.jsx",["86"],"import React, { useContext } from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\nimport { CreateContext } from '../CreateContext/CreateContext';\r\nimport { Checkbox } from '../..';\r\n\r\nconst ArtistList = () => {\r\n    \r\n    let { list } = useContext(CreateContext);\r\n\r\n    return (\r\n        <ul className='list'>\r\n            {list.map((artist, i) => (\r\n                <Checkbox item={artist} key={i} />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ArtistList;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\PlaylistMaker\\PlaylistMaker.jsx",["87","88"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\nimport { CreateContext } from '../CreateContext/CreateContext';\r\n\r\n\r\nconst PlaylistMaker = () => {\r\n\r\n    let { \r\n        createPlaylist, \r\n        associateArtists, \r\n        findArtistsByGenre \r\n    } = useContext(LibraryContext);\r\n\r\n    let {\r\n        selectedList, \r\n        setSelectedList, \r\n        setArtistList,\r\n        setCreateOption, \r\n        changeOption, \r\n        createOption, \r\n        clearSelection, \r\n        artistList\r\n    } = useContext(CreateContext);\r\n\r\n    const playlistNameRef = useRef(null);\r\n\r\n    const beginCreateStage = () => {\r\n        console.log('this will be a multi part function')\r\n        let newArtistList = selectedList;\r\n        if (createOption === 'genre') {\r\n            console.log('creating by genre')\r\n            newArtistList = findArtistsByGenre(selectedList);\r\n        }\r\n        setArtistList(newArtistList);\r\n        setCreateOption('create');\r\n    }\r\n\r\n    //This is what is returned if 'createSelection' is set to 'genre'\r\n    const createByGenre = () => {\r\n        return (\r\n            <div className='playlistMaker'>\r\n                <p>Here are your selected genres so far:</p>\r\n                <ul className='playlistMakerList'>\r\n                    {selectedList.sort().map((genre, key) => (\r\n                        <li key={key} onClick={e => {changeOption(genre)}}>{genre}</li>\r\n                    ))}\r\n                </ul>\r\n                <div className='createButtons'>\r\n                    <button onClick={() => beginCreateStage()}>Show Artists</button>\r\n                    <button onClick={() => clearSelection()}>Clear selection</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //This is what is returned if 'createSelection' is set to 'artist'\r\n    const createByArtist = () => {\r\n        return (\r\n            <div className='playlistMaker'>\r\n                <p>Here are your selected artists so far:</p>\r\n                <ul className='playlistMakerList'>\r\n                    {selectedList.sort((a, b) => (a.name > b.name) ? 1 : -1).map((artist, key) => (\r\n                        <li key={key} onClick={e => {changeOption(artist)}}>{artist.name}</li>\r\n                    ))}\r\n                </ul>\r\n                <div className='createButtons'>\r\n                    <button onClick={() => beginCreateStage()}>Show Artists</button>\r\n                    <button onClick={() => setSelectedList(associateArtists(selectedList))}>Associate Artists</button>\r\n                    <button onClick={() => clearSelection()}>Clear selection</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //This is what is returned if 'createSelection' is set to 'create'\r\n    const create = () => {\r\n        return (\r\n            <div className='playlistMaker'>\r\n                <p>Here is a list of artists matching your selection:</p>\r\n                <ul className='playlistMakerList'>\r\n                    {artistList.map((artist, key) => (\r\n                        <li key={key} onClick={e => {changeOption(artist)}}>{artist.name}</li>\r\n                    ))}\r\n                </ul>\r\n                <form className='name-playlist'>\r\n                    <label>Name your playlist:</label>\r\n                    <input type='text' name='Name your playlist' ref={playlistNameRef}></input>\r\n                </form>\r\n                <b>Clicking 'Create' below will create a playlist with these artists</b><br></br>\r\n                <div className='createButtons'>\r\n                    <button onClick={() => createPlaylist(artistList, playlistNameRef.current.value)}>Create</button>\r\n                    <button onClick={() => clearSelection()}>Clear selection</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //conditional rendering based on if user chose to create by genre\r\n    //or create by artist, or begin the create stage\r\n    const genreOrArtist = () => {\r\n        if (createOption === 'artist') {\r\n            return createByArtist();\r\n        } else if (createOption === 'genre') {\r\n            return createByGenre();\r\n        } else if (createOption === 'create') {\r\n            return create();\r\n        }\r\n    }\r\n\r\n    return (\r\n        genreOrArtist()\r\n    );\r\n}\r\n\r\nexport default PlaylistMaker;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\HomePage\\HomePage.jsx",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\Navbar\\Navbar.jsx",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\UserInfo\\UserInfo.jsx",["89","90"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\n\r\nconst UserInfo = () => {\r\n\r\n    const { user } = useContext(LibraryContext);\r\n\r\n    const showInfo = (user) => {\r\n        return (\r\n            <ul className='infoList'>\r\n            <li><b>Username:</b> {user.display_name}</li>\r\n                <li><b>Country:</b> {user.country}</li>\r\n                <li><b>Email:</b> {user.email}</li>\r\n                <li><b>Subscription Type:</b> {user.product}</li>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='userInfo'>\r\n            <h1>{user.display_name}:</h1>\r\n            {showInfo(user)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\BasicComponents\\GetLogin\\GetLogin.jsx",["91"],"import React, { useState, useEffect, useRef, useContext} from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext';\r\n\r\nconst GetLogin = ({changeLogin, spotifyURL}) => {\r\n\r\n    const [url, setUrl] = useState({});\r\n    let { startup } = useContext(LibraryContext);\r\n\r\n    useEffect(() => {\r\n        setUrl(spotifyURL)\r\n    }, [spotifyURL]);\r\n\r\n    let newWindow;\r\n\r\n    const openSpotify = () => {\r\n        var width = 450,\r\n            height = 730;\r\n        let features = 'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' + width + ', height=' + height\r\n        newWindow = window.open(url, 'Spotify', features);\r\n\r\n\r\n        let timer = setInterval(function() {\r\n            if (newWindow.closed) {\r\n                clearInterval(timer);\r\n                changeLogin();\r\n                startup();\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    const waitForURL = () => {\r\n        if (url === 'none') {\r\n            return (<p>We are generating your sign in link now</p>)\r\n        } else {\r\n            return (\r\n                <button className='signInButton' onClick={() => openSpotify()}>\r\n                    Log In\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        waitForURL()\r\n    )\r\n}\r\n\r\nexport default GetLogin;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\CreateContext\\CreateContext.js",["92","93"],"import React, { Component, useContext } from 'react';\r\nimport { LibraryContext } from '../../Context/LibraryContext'\r\n\r\nconst CreateContext = React.createContext();\r\nconst { Provider, Consumer } = CreateContext;\r\n\r\nclass CreateProvider extends Component {\r\n    state = {\r\n        createOption: '',\r\n        list: [],\r\n        selectedList: [],\r\n        artistList: [],\r\n    }\r\n\r\n    setCreateOption = (selection) => {\r\n        console.log('creating by: ', selection);\r\n        this.setState({\r\n            createOption: selection,\r\n        });\r\n    };\r\n\r\n    setList = (newList) => {\r\n        this.setState({\r\n            list: newList,\r\n        })\r\n    }\r\n\r\n    setSelectedList = (newList) => {\r\n        this.setState({\r\n            selectedList: newList,\r\n        })\r\n    }\r\n\r\n    setArtistList = (newList) => {\r\n        this.setState({\r\n            artistList: newList,\r\n        })\r\n    }\r\n\r\n    changeOption = (option) => {\r\n        let tempList = this.state.selectedList;\r\n        if (tempList.includes(option)) {\r\n            const index = tempList.indexOf(option);\r\n            if (index > -1) {\r\n                console.log('removing option: ', option)\r\n                tempList.splice(index, 1);\r\n            }\r\n        } else {\r\n            console.log('adding option: ', option)\r\n            tempList.push(option);\r\n        }\r\n        this.setState({\r\n            selectedList: tempList,\r\n        })\r\n    }\r\n\r\n    clearSelection = () => {\r\n        if (this.state.createOption === 'create') {\r\n            this.setCreateOption('');\r\n        };\r\n        this.setSelectedList([]);\r\n    }\r\n\r\n    resetState = () => {\r\n        this.setState({\r\n            createOption: '',\r\n            list: [],\r\n            selectedList: [],\r\n            artistList: [],\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Provider\r\n                value = {{\r\n                    ...this.state,\r\n                    setCreateOption: this.setCreateOption,\r\n                    setList: this.setList,\r\n                    setSelectedList: this.setSelectedList,\r\n                    setArtistList: this.setArtistList,\r\n                    changeOption: this.changeOption,\r\n                    clearSelection: this.clearSelection,\r\n                }}\r\n            >{this.props.children}</Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport { CreateContext, CreateProvider, Consumer as CreateConsumer };","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateComponents\\Checkbox\\Checkbox.jsx",["94","95","96"],"import React, { useContext, useEffect, useState} from 'react';\r\nimport { CreateContext } from '../CreateContext/CreateContext';\r\n\r\nconst Checkbox = (props) => {\r\n\r\n    let { item } = props;\r\n\r\n    let { selectedList, changeOption, createOption } = useContext(CreateContext);\r\n    let checked = false;\r\n    let name = typeof item === 'object' ? item.name : item;\r\n\r\n    if (selectedList.includes(item)) {\r\n        checked = true;\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <label>\r\n                <input type='checkbox' checked={checked} value={name} onChange={e => changeOption(item)} />{name}\r\n            </label>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Checkbox;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\Library\\Library.jsx",["97","98"],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\ArtistItem\\ArtistItem.jsx",["99","100","101"],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\LibraryComponents\\LibraryList\\LibraryList.jsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":29,"nodeType":"108","messageId":"109","endLine":1,"endColumn":37},{"ruleId":"106","severity":1,"message":"110","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":24},{"ruleId":"106","severity":1,"message":"110","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":1,"column":29,"nodeType":"108","messageId":"109","endLine":1,"endColumn":37},{"ruleId":"106","severity":1,"message":"111","line":1,"column":39,"nodeType":"108","messageId":"109","endLine":1,"endColumn":48},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"111","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"112","line":1,"column":38,"nodeType":"108","messageId":"109","endLine":1,"endColumn":44},{"ruleId":"106","severity":1,"message":"113","line":1,"column":28,"nodeType":"108","messageId":"109","endLine":1,"endColumn":38},{"ruleId":"106","severity":1,"message":"110","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":24},{"ruleId":"106","severity":1,"message":"111","line":1,"column":29,"nodeType":"108","messageId":"109","endLine":1,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":1,"column":40,"nodeType":"108","messageId":"109","endLine":1,"endColumn":48},{"ruleId":"106","severity":1,"message":"114","line":8,"column":39,"nodeType":"108","messageId":"109","endLine":8,"endColumn":51},{"ruleId":"106","severity":1,"message":"115","line":9,"column":12,"nodeType":"108","messageId":"109","endLine":9,"endColumn":19},{"ruleId":"106","severity":1,"message":"116","line":9,"column":21,"nodeType":"108","messageId":"109","endLine":9,"endColumn":31},{"ruleId":"106","severity":1,"message":"110","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":24},{"ruleId":"117","severity":1,"message":"118","line":14,"column":8,"nodeType":"119","endLine":14,"endColumn":16,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":29,"column":17,"nodeType":"123","endLine":29,"endColumn":87},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'LibraryContext' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useContext' is defined but never used.","'createOption' is assigned a value but never used.","'display' is assigned a value but never used.","'setDisplay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formatArtist' and 'images'. Either include them or remove the dependency array.","ArrayExpression",["126"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [artist, formatArtist, images]",{"range":"129","text":"130"},[429,437],"[artist, formatArtist, images]"]