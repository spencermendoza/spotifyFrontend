[{"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\index.js":"1","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\App.js":"2","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\index.js":"3","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\HomePage\\HomePage.jsx":"4","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\GetLogin\\GetLogin.jsx":"5","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Navbar\\Navbar.jsx":"6","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\UserInfo\\UserInfo.jsx":"7","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Library\\Library.jsx":"8","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Context\\LibraryContext.js":"9","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\ArtistCard\\ArtistCard.jsx":"10","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Create\\Create.jsx":"11","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateSelections\\CreateSelections.jsx":"12","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\ArtistList\\ArtistList.jsx":"13","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\GenreList\\GenreList.jsx":"14","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\PlaylistMaker\\PlaylistMaker.jsx":"15"},{"size":151,"mtime":1610225509236,"results":"16","hashOfConfig":"17"},{"size":1383,"mtime":1614191897215,"results":"18","hashOfConfig":"17"},{"size":902,"mtime":1614279206755,"results":"19","hashOfConfig":"17"},{"size":1664,"mtime":1614193651222,"results":"20","hashOfConfig":"17"},{"size":1270,"mtime":1614191911343,"results":"21","hashOfConfig":"17"},{"size":521,"mtime":1614188022214,"results":"22","hashOfConfig":"17"},{"size":1496,"mtime":1614193629069,"results":"23","hashOfConfig":"17"},{"size":1399,"mtime":1613144275183,"results":"24","hashOfConfig":"17"},{"size":3299,"mtime":1614623769083,"results":"25","hashOfConfig":"17"},{"size":705,"mtime":1612798808592,"results":"26","hashOfConfig":"17"},{"size":3043,"mtime":1614627650178,"results":"27","hashOfConfig":"17"},{"size":549,"mtime":1614363811391,"results":"28","hashOfConfig":"17"},{"size":325,"mtime":1614628108982,"results":"29","hashOfConfig":"17"},{"size":2220,"mtime":1614368738111,"results":"30","hashOfConfig":"17"},{"size":3326,"mtime":1614373335367,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"17r2awj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\index.js",[],["71","72"],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\App.js",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\index.js",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\HomePage\\HomePage.jsx",["73","74","75"],"import React, { Component, useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LibraryContext } from '../Context/LibraryContext';\r\nimport { Navbar, PlaylistList, UserInfo, Library, Create } from '../../components';\r\n\r\nconst HomePage = () => {\r\n\r\n    const [chosenOption, setChosenOption] = useState('Home');\r\n\r\n    const displayOptions = [\r\n        'View My Library',\r\n        'Create',\r\n        'Show User Info',\r\n    ];\r\n\r\n    let { artistLibrary } = useContext(LibraryContext);\r\n\r\n    // testing setting HomePage state using child components\r\n    const stateSetter = (itemValue) => {\r\n        console.log('HomePage setting state: ', itemValue)\r\n        setChosenOption(itemValue);\r\n    }\r\n\r\n    //determines which component to display based on the value stored in state\r\n    const showComponent = () => {\r\n        if (chosenOption === 'View My Library') {\r\n            return <Library />\r\n        } else if (chosenOption === 'Create') {\r\n            return <Create />\r\n        } else if (chosenOption === 'Show User Info') {\r\n            return <UserInfo />\r\n        } else {\r\n            return <h1>Ok, let's get to work!</h1>\r\n        }\r\n    }\r\n\r\n    const waitForLibrary = () => {\r\n        if (artistLibrary.length > 0) {\r\n            return (\r\n                <div className='topLevel'>\r\n                    <Navbar displayOptions={displayOptions} returnOption={stateSetter}/>\r\n                    {showComponent()}\r\n                </div>\r\n            );\r\n        } else {\r\n            return <h3>Please hold while I retrieve your music library!</h3>\r\n        }\r\n    }\r\n\r\n    return waitForLibrary()\r\n};\r\n\r\n\r\nexport default HomePage;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\GetLogin\\GetLogin.jsx",["76"],"import React, { useState, useEffect, useRef} from 'react';\r\n\r\nconst GetLogin = ({changeLogin, spotifyURL}) => {\r\n\r\n    const [url, setUrl] = useState({});\r\n    const loginWindow = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setUrl(spotifyURL)\r\n    }, [spotifyURL]);\r\n\r\n    let newWindow;\r\n\r\n    const openSpotify = () => {\r\n        var width = 450,\r\n            height = 730;\r\n        let features = 'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' + width + ', height=' + height\r\n        newWindow = window.open(url, 'Spotify', features);\r\n\r\n\r\n        let timer = setInterval(function() {\r\n            if (newWindow.closed) {\r\n                clearInterval(timer);\r\n                changeLogin();\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    const waitForURL = () => {\r\n        if (url === 'none') {\r\n            return (<p>We are generating your sign in link now</p>)\r\n        } else {\r\n            return (\r\n                <div className='container'>\r\n                    <button onClick={() => openSpotify()}>\r\n                        Click this button to log in to Spotify\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        waitForURL()\r\n    )\r\n}\r\n\r\nexport default GetLogin;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Navbar\\Navbar.jsx",["77"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst Navbar = ({displayOptions, returnOption, }) => {\r\n\r\n    const [options, setOptions] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        if (displayOptions) {\r\n            setOptions(displayOptions);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <ul className='navbar'>\r\n            {options.map((item, i) => (\r\n                <li key={i} onClick={() => {returnOption(item)}}>{item}</li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Navbar;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\UserInfo\\UserInfo.jsx",["78","79","80","81"],"import axios from 'axios';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { LibraryContext } from '../Context/LibraryContext';\r\n\r\nconst UserInfo = () => {\r\n\r\n    const { user } = useContext(LibraryContext);\r\n\r\n    const [userInfo, setUser] = useState({});\r\n\r\n    // useEffect(() => {\r\n        \r\n    //     async function showUser() {\r\n    //         try {\r\n    //             await axios.get('http://localhost:8888/userinfo').then(response => {\r\n    //                 setUser(response.data);\r\n    //             })\r\n    //         } catch (error) {\r\n    //             if (error) {\r\n    //                 console.log('there was an error on UserInfo: ', error)\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n    //     if (Object.keys(user) > 0) {\r\n    //         console.log('user passed through state: ', user)\r\n    //         setUser(user);\r\n    //     } else {\r\n    //         showUser();\r\n    //     }\r\n    // }, []);\r\n\r\n    const showInfo = (user) => {\r\n        return (\r\n            <ul>\r\n                <li><b>Country:</b> {user.country}</li>\r\n                <li><b>Display Name:</b> {user.display_name}</li>\r\n                <li><b>Email:</b> {user.email}</li>\r\n                <li><b>Subscription Type:</b> {user.product}</li>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='userInfo'>\r\n            <h1>This is the current user:</h1>\r\n            {showInfo(user)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Library\\Library.jsx",["82","83","84"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { LibraryContext } from '../Context/LibraryContext';\r\nimport { ArtistCard } from '../../components';\r\n\r\nconst Library = () => {\r\n\r\n    const { artistLibrary } = useContext(LibraryContext);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('this thing working? ', artistLibrary)\r\n\r\n    }, []);\r\n\r\n\r\n    //Checks if there are items in library in state, if there is shows number of tracks in library\r\n    //and shows a button to view artists. If no artists in library in state, shows a <p>\r\n    //that says 'please hold while I get your tracks'\r\n    const waitingOnAPI = () => {\r\n        if (artistLibrary.length > 0) {\r\n            return (\r\n                <div className='libraryPage'>\r\n                    <h1>Here is your library:</h1>\r\n                    <p>You have {artistLibrary.length} artists in your library.</p>\r\n                    <ul className='artistList'>\r\n                        {artistLibrary.map(artist => (\r\n                            <ArtistCard artist={artist} />\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<p>Please hold while I get your tracks!</p>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {waitingOnAPI()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Library;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Context\\LibraryContext.js",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\ArtistCard\\ArtistCard.jsx",["85","86","87"],"import React, { useContext, useEffect } from 'react';\r\nimport { LibraryContext } from '../Context/LibraryContext';\r\n\r\nconst ArtistCard = ({artist}) => {\r\n\r\n    useEffect(() => {\r\n        console.log('curr Artist: ', artist);\r\n    }, []);\r\n\r\n    const thisArtist = artist;\r\n    const theseAlbums = artist.music;\r\n\r\n    return (\r\n        <li className='oneArtist'>\r\n            <h3>{thisArtist.name}</h3>\r\n            <h4>Music: </h4>\r\n            {theseAlbums.map(album => (\r\n                <div>\r\n                    <p><b>{album.name}</b></p>\r\n                    <p><b>Tracks: </b>{album.tracks.length}</p>\r\n                </div>\r\n            ))}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ArtistCard;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\Create\\Create.jsx",[],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\CreateSelections\\CreateSelections.jsx",["88","89","90","91","92"],"import React, { useState, useContext } from 'react';\r\nimport { LibraryContext } from '../Context/LibraryContext';\r\nimport { GenreDrop, ArtistList } from '../../components';\r\n\r\nconst CreateSelections = ({setSelection}) => {\r\n\r\n    // let { setCreateState } = useContext(LibraryContext);\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => setSelection('genre')}>Create by genre</button>\r\n            <button onClick={() => setSelection('artist')}>Create by artist</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateSelections;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\ArtistList\\ArtistList.jsx",["93","94"],"D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\GenreList\\GenreList.jsx",["95"],"import React,  { useState, useEffect, useContext, } from 'react';\r\nimport { LibraryContext } from '../Context/LibraryContext';\r\n\r\nconst GenreList = ({ props }) => {\r\n\r\n    let {\r\n        createOption,\r\n        changeStateList,\r\n        selectedGenres,\r\n    } = props;\r\n\r\n    let { artistLibrary } = useContext(LibraryContext);\r\n    const [genres, setGenres] = useState([]);\r\n\r\n    //simply aggregates a list of all genres present in the \r\n    //artistLibrary stored in LibraryContext\r\n    useEffect(() => {\r\n        let genreCompiler = [];\r\n        artistLibrary.forEach(artist => {\r\n            artist.genres.forEach(genre => {\r\n                if (!genreCompiler.includes(genre)) {\r\n                    genreCompiler.push(genre);\r\n                }\r\n            })\r\n        })\r\n        genreCompiler.sort();\r\n        setGenres(genreCompiler);\r\n    }, [createOption]);\r\n\r\n    //checks if passed option is already on the selectedGenre list. \r\n    //if it is, removes option from list.\r\n    //if it is not, adds option to list.\r\n    const changeOption = (option) => {\r\n        let tempGenreList = selectedGenres;\r\n        if (tempGenreList.includes(option.genre)) {\r\n            const index = tempGenreList.indexOf(option.genre);\r\n            if (index > -1) {\r\n                tempGenreList.splice(index, 1);\r\n            }\r\n        } else {\r\n            tempGenreList.push(option.genre);\r\n        }\r\n        changeStateList(tempGenreList);\r\n    }\r\n\r\n    //simple component that creates a li with a label\r\n    //for the genre and a checkbox that determines\r\n    //if the item is selected or not\r\n    const Checkbox = (genre, key) => {\r\n        var checked = null;\r\n        if (selectedGenres.includes(genre.genre)) {\r\n            checked = true;\r\n        };\r\n        return (\r\n            <li key={key}>\r\n                <label>\r\n                    <input type='checkbox' checked={checked} value={genre.genre} onChange={e => changeOption(genre)} />{genre.genre}\r\n                </label>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {genres.map((genre, i) => (\r\n                <Checkbox genre={genre} key={i} />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default GenreList;","D:\\NodePractice\\spotifypractice\\ui\\web\\src\\components\\PlaylistMaker\\PlaylistMaker.jsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"104","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"105","line":4,"column":18,"nodeType":"102","messageId":"103","endLine":4,"endColumn":30},{"ruleId":"100","severity":1,"message":"106","line":6,"column":11,"nodeType":"102","messageId":"103","endLine":6,"endColumn":22},{"ruleId":"107","severity":1,"message":"108","line":11,"column":8,"nodeType":"109","endLine":11,"endColumn":10,"suggestions":"110"},{"ruleId":"100","severity":1,"message":"104","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13},{"ruleId":"100","severity":1,"message":"111","line":2,"column":27,"nodeType":"102","messageId":"103","endLine":2,"endColumn":36},{"ruleId":"100","severity":1,"message":"112","line":9,"column":12,"nodeType":"102","messageId":"103","endLine":9,"endColumn":20},{"ruleId":"100","severity":1,"message":"113","line":9,"column":22,"nodeType":"102","messageId":"103","endLine":9,"endColumn":29},{"ruleId":"100","severity":1,"message":"114","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"104","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"107","severity":1,"message":"115","line":14,"column":8,"nodeType":"109","endLine":14,"endColumn":10,"suggestions":"116"},{"ruleId":"100","severity":1,"message":"117","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":27},{"ruleId":"100","severity":1,"message":"118","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":24},{"ruleId":"107","severity":1,"message":"119","line":8,"column":8,"nodeType":"109","endLine":8,"endColumn":10,"suggestions":"120"},{"ruleId":"100","severity":1,"message":"114","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"117","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":37},{"ruleId":"100","severity":1,"message":"118","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":24},{"ruleId":"100","severity":1,"message":"121","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":19},{"ruleId":"100","severity":1,"message":"122","line":3,"column":21,"nodeType":"102","messageId":"103","endLine":3,"endColumn":31},{"ruleId":"100","severity":1,"message":"114","line":1,"column":29,"nodeType":"102","messageId":"103","endLine":1,"endColumn":37},{"ruleId":"100","severity":1,"message":"123","line":6,"column":11,"nodeType":"102","messageId":"103","endLine":6,"endColumn":24},{"ruleId":"107","severity":1,"message":"115","line":28,"column":8,"nodeType":"109","endLine":28,"endColumn":22,"suggestions":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'PlaylistList' is defined but never used.","'loginWindow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayOptions'. Either include it or remove the dependency array. If 'setOptions' needs the current value of 'displayOptions', you can also switch to useReducer instead of useState and read 'displayOptions' in the reducer.","ArrayExpression",["127"],"'useEffect' is defined but never used.","'userInfo' is assigned a value but never used.","'setUser' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'artistLibrary'. Either include it or remove the dependency array.",["128"],"'useContext' is defined but never used.","'LibraryContext' is defined but never used.","React Hook useEffect has a missing dependency: 'artist'. Either include it or remove the dependency array.",["129"],"'GenreDrop' is defined but never used.","'ArtistList' is defined but never used.","'artistLibrary' is assigned a value but never used.",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [displayOptions]",{"range":"139","text":"140"},"Update the dependencies array to be: [artistLibrary]",{"range":"141","text":"142"},"Update the dependencies array to be: [artist]",{"range":"143","text":"144"},"Update the dependencies array to be: [artistLibrary, createOption]",{"range":"145","text":"146"},[281,283],"[displayOptions]",[386,388],"[artistLibrary]",[233,235],"[artist]",[853,867],"[artistLibrary, createOption]"]